/**
 *
 * ===
 *
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////
import Point3D from './point3d';
import Hexagon from './hexagon';

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////
const DIRECTIONS = [
  [0, 1, -1],
  [1, 0, -1],
  [1, -1, 0],
  [0, -1, 1],
  [-1, 0, 1],
  [-1, 1, 0]
];

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
class Cube extends Point3D{
  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  constructor(x, y, z){
    super(x, y, z);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  findNeighbors(){
    let neighbors = [];
    for(let idx = 0; idx < DIRECTIONS.length; idx++){
      let direction = DIRECTIONS[idx];
      let x = this._x + direction[0];
      let y = this._y + direction[1];
      let z = this._z + direction[2];
      let cube = new Cube(x, y, z);
      neighbors.push(cube);
    }
    return neighbors;
  }

  toHexagon(){
    return new Hexagon(this._x, this._z);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default Cube;